version: 2.1

jobs:
  ruby_265:
    docker:
    - image: circleci/ruby:2.6.5-stretch-node-browsers
    steps:
      - run:
          command: |
                   google-chrome --version
                   #dockerize -wait tcp://localhost:9515 -timeout 1m
                   autre_wf=$(curl -G "https://circleci.com/api/v2/pipeline/<<pipeline.id>>/workflow" -H "Circle-Token: $MyToken"|jq -rs --arg CIRCLE_WORKFLOW_ID "$CIRCLE_WORKFLOW_ID" '.[].items[]|select(.id != $CIRCLE_WORKFLOW_ID)|.id')
                   echo $autre_wf
                   curl -G "https://circleci.com/api/v2/workflow/$autre_wf" -H "Circle-Token: $MyToken" | jq -s
                   
                   
  ruby_266:
    docker:
    - image: circleci/ruby:2.6.6-stretch-node-browsers
    steps:
      - run:
          background: true
          name: Launching ChromeDriver
          command: chromedriver
                   
      - run:
          command: |
                   dockerize -wait tcp://localhost:9515 -timeout 1m
                   google-chrome --version
                   autre_wf_2=$(curl -G "https://circleci.com/api/v2/pipeline/<<pipeline.id>>/workflow" -H "Circle-Token: $MyToken"|jq -rs --arg CIRCLE_WORKFLOW_ID "$CIRCLE_WORKFLOW_ID" '.[].items[]|select(.id != $CIRCLE_WORKFLOW_ID)|.id')
                   echo $autre_wf_2
                   curl -G "https://circleci.com/api/v2/workflow/${autre_wf_2}" -H "Circle-Token: $MyToken" | jq -s
                   
  get-other-wf-id: # defines a parameterized job
    docker:
      - image: circleci/python
    steps:
      - run:
          name: Getting id of the other on_hold workflow
          command: |
              #other_on_hold_id=$(curl -G "https://circleci.com/api/v2/pipeline/<<pipeline.id>>/workflow" -H "Circle-Token: $MyToken"|jq -rs --arg CIRCLE_WORKFLOW_ID "$CIRCLE_WORKFLOW_ID" '.[].items[]|select(.status == "on_hold")|select(.id != $CIRCLE_WORKFLOW_ID)|.id')              
              #echo $other_on_hold_id         
              echo "Hello Hello"    
workflows:
  build_265:
    when: << pipeline.parameters.run_workflow_265 >>
    jobs:
      - ruby_265
      - hold265: # <<< A job that will require manual approval in the CircleCI web application.
          type: approval
          requires:
            - ruby_265
      - get-other-wf-id:
          requires:
            - hold265
          post-steps:
            - run:
                name: Cancelling the other "on_hold" workflow
                command: |
                    other_on_hold_id=$(curl -G "https://circleci.com/api/v2/pipeline/<<pipeline.id>>/workflow" -H "Circle-Token: $MyToken"|jq -rs --arg CIRCLE_WORKFLOW_ID "$CIRCLE_WORKFLOW_ID" '.[].items[]|select(.status == "on_hold")|select(.id != $CIRCLE_WORKFLOW_ID)|.id')
                    echo $other_on_hold_id
                    curl -X POST "https://circleci.com/api/v2/workflow/${other_on_hold_id}/cancel" -H "Circle-Token: ${MyToken}"
      
  build_266:
    when: << pipeline.parameters.run_workflow_266 >>
    jobs:
      - ruby_266
      - hold266: # <<< A job that will require manual approval in the CircleCI web application.
          type: approval
          requires:
            - ruby_266
      - get-other-wf-id:
          requires:
            - hold266
          post-steps:
            - run:
                name: Cancelling the other "on_hold" workflow
                command: |
                    other_on_hold_id=$(curl -G "https://circleci.com/api/v2/pipeline/<<pipeline.id>>/workflow" -H "Circle-Token: $MyToken"|jq -rs --arg CIRCLE_WORKFLOW_ID "$CIRCLE_WORKFLOW_ID" '.[].items[]|select(.status == "on_hold")|select(.id != $CIRCLE_WORKFLOW_ID)|.id')
                    echo $other_on_hold_id
                    curl -X POST "https://circleci.com/api/v2/workflow/${other_on_hold_id}/cancel" -H "Circle-Token: ${MyToken}"
                    
parameters:
  run_workflow_265:
    default: true
    type: boolean
  run_workflow_266:
    default: true
    type: boolean
